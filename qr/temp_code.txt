let src = cv.imread('imageCanvasInput');
let templates = ['template1.png', 'template2.png', 'template3.png'];
let dst = new cv.Mat();
let mask = new cv.Mat();

for (let i = 0; i < templates.length; i++) {
  let templ = cv.imread(templates[i]);
  cv.matchTemplate(src, templ, dst, cv.TM_CCOEFF, mask);
  let result = cv.minMaxLoc(dst, mask);
  let maxPoint = result.maxLoc;
  let color = new cv.Scalar(255, 0, 0, 255);
  let point = new cv.Point(maxPoint.x + templ.cols, maxPoint.y + templ.rows);
  cv.rectangle(src, maxPoint, point, color, 2, cv.LINE_8, 0);
  templ.delete();
}

cv.imshow('canvasOutput', src);
src.delete(); dst.delete(); mask.delete();




*****************************************************************************************


let src = cv.imread('imageCanvasInput');
let templ = cv.imread('templateCanvasInput');
let dst = new cv.Mat();
let mask = new cv.Mat();

for (let y = 0; y < src.rows - templ.rows; y++) {
  for (let x = 0; x < src.cols - templ.cols; x++) {
    let roi = new cv.Rect(x, y, templ.cols, templ.rows);
    let srcRoi = src.roi(roi);
    cv.matchTemplate(srcRoi, templ, dst, cv.TM_CCOEFF, mask);
    let result = cv.minMaxLoc(dst, mask);
    let maxPoint = result.maxLoc;
    let color = new cv.Scalar(255, 0, 0, 255);
    let point1 = new cv.Point(maxPoint.x + x, maxPoint.y + y);
    let point2 = new cv.Point(maxPoint.x + x + templ.cols, maxPoint.y + y + templ.rows);
    cv.rectangle(src, point1, point2, color, 2, cv.LINE_8, 0);
    srcRoi.delete();
  }
}

cv.imshow('canvasOutput', src);
src.delete(); dst.delete(); mask.delete();


***************************************************************************************



